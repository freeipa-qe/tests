#!/bin/sh

#############################
#     Global variables      #
############################# 
DOMAIN=idm.lab.bos.redhat.com
VMHOSTER32=giant.$DOMAIN
VMHOSTER64=goliath.$DOMAIN
IMAGE_BASE=/export/images
IMAGE_BK_BASE=$IMAGE_BASE/vms


# there is only one function in this file: setupvm
setupvm(){

vmlabel=$1
if [ -z $vmlabel ];then
	echo "[ERROR] vmlabel is not given, exit"
	exit
fi

case $vmlabel in
	mv32a)
		hoster=$VMHOSTER32
		hostname="${vmlabel}-vm.$DOMAIN"
		imagename="rhel5-i386-mv32a-vm"
		imagefile=$IMAGE_BASE/rhel5-i386-mv32a-vm.img
		imagebase=$IMAGE_BK_BASE/rhel5-i386/mv32a-vm
		;;
	mv32b)
		hoster=$VMHOSTER32
		hostname="${vmlabel}-vm.$DOMAIN"
		imagename="rhel5-i386-mv32b-vm"
		imagefile=$IMAGE_BASE/rhel5-i386-mv32b-vm.img
		imagebase=$IMAGE_BK_BASE/rhel5-i386/mv32b-vm
		;;
	mv32c)
		hoster=$VMHOSTER32
		hostname="${vmlabel}-vm.$DOMAIN"
		imagename="rhel5-i386-mv32c-vm"
		imagefile=$IMAGE_BASE/rhel5-i386-mv32c-vm.img
		imagebase=$IMAGE_BK_BASE/rhel5-i386/mv32c-vm
		;;
	mv32d)
		hoster=$VMHOSTER32
		hostname="${vmlabel}-vm.$DOMAIN"
		imagename="rhel4-i386-mv32d-vm"
		imagefile=$IMAGE_BASE/rhel4-i386-mv32d-vm.img
		imagebase=$IMAGE_BK_BASE/rhel4-i386/mv32d-vm
		;;
	mv32e)
		hoster=$VMHOSTER32
		hostname="${vmlabel}-vm.$DOMAIN"
		imagename="rhel4-i386-mv32e-vm"
		imagefile=$IMAGE_BASE/rhel4-i386-mv32e-vm.img
		imagebase=$IMAGE_BK_BASE/rhel4-i386/mv32e-vm
		;;
	mv32f)
		hoster=$VMHOSTER32
		hostname="${vmlabel}-vm.$DOMAIN"
		imagename="rhel4-i386-mv32e-vm"
		imagefile=$IMAGE_BASE/window-xp-mv32f-vm.img
		imagebase=$IMAGE_BK_BASE/window/xp
		;;
	mv32g)
		hoster=$VMHOSTER32
		hostname="${vmlabel}-vm.$DOMAIN"
		imagename="rhel4-i386-mv32e-vm"
		imagefile=$IMAGE_BASE/window-2003-mv32g-vm.img
		imagebase=$IMAGE_BK_BASE/window/2003
		;;
	mv32h)
		echo "	[$vmlabel] is not ready"
		;;
	mv32i)
		echo "	[$vmlabel] is not ready"
		;;
	mv32j)
		echo "	[$vmlabel] is not ready"
		;;
	mv64a)
		hoster=$VMHOSTER64
		hostname="${vmlabel}-vm.$DOMAIN"
		imagename="rhel5-x86_64-mv64a-vm"
		imagefile=$IMAGE_BASE/rhel5-x86_64-mv64a-vm.img
		imagebase=$IMAGE_BK_BASE/rhel5-x86_64/mv64a-vm
		;;
	mv64b)
		hoster=$VMHOSTER64
		hostname="${vmlabel}-vm.$DOMAIN"
		imagename="rhel5-x86_64-mv64b-vm"
		imagefile=$IMAGE_BASE/rhel5-x86_64-mv64b-vm.img
		imagebase=$IMAGE_BK_BASE/rhel5-x86_64/mv64b-vm
		;;
	mv64c)
		hoster=$VMHOSTER64
		hostname="${vmlabel}-vm.$DOMAIN"
		imagename="rhel5-x86_64-mv64c-vm"
		imagefile=$IMAGE_BASE/rhel5-x86_64-mv64c-vm.img
		imagebase=$IMAGE_BK_BASE/rhel5-x86_64/mv64c-vm
		;;
	mv64d)
		hoster=$VMHOSTER64
		hostname="${vmlabel}-vm.$DOMAIN"
		imagename="rhel4-x86_64-mv64d-vm"
		imagefile=$IMAGE_BASE/rhel4-x86_64-mv64d-vm.img
		imagebase=$IMAGE_BK_BASE/rhel4-x86_64/mv64d-vm
		;;
	mv64e)
		hoster=$VMHOSTER64
		hostname="${vmlabel}-vm.$DOMAIN"
		imagename="rhel4-x86_64-mv64e-vm"
		imagefile=$IMAGE_BASE/rhel4-x86_64-mv64e-vm.img
		imagebase=$IMAGE_BK_BASE/rhel4-x86_64/mv64e-vm
		;;
	mv64f)
		echo "	[$vmlabel] is not ready"
		;;
	mv64g)
		echo "	[$vmlabel] is not ready"
		;;
	mv64h)
		echo "	[$vmlabel] is not ready"
		;;
	mv64i)
		echo "	[$vmlabel] is not ready"
		;;
	mv64j)
		echo "	[$vmlabel] this is reserved"
		;;
	*)
		echo "[ERROR] unknow enviroment [$vmlabel], exit program"
		exit
		;;
esac

}
