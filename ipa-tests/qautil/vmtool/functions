#!/bin/sh
# by yzhang

#. ./conf

LOG()
{
  MSG=$1
  TIMESTAMP=`date "+[%D %H:%M:%S]"`
  if [ -z $LOGFILE ]
  then
	LOGFILE=/tmp/$RANDOM.log
	echo "" > $LOGFILE
  fi
  echo "$TIMESTAMP $MSG" >> $LOGFILE
}

techo()
{
  # echo but add timestamp as beginning
  MSG=$1
  TIMESTAMP=`date "+[%D %H:%M:%S]"`
  echo "$TIMESTAMP $MSG"
}

shutdownVM()
{
  vmhoster=$1
  vmguest_hostname=$2
  vmguest_imagename=$3
  status=`ssh root@$vmhoster "virsh list | grep $vmguest_imagename"`
  if echo $status | grep "running" 1>/dev/null 2>&1
  then
	techo "		image is running, sending 'poweroff' signal to $vmguest_hostname"
  	techo "		sleep for 60 seconds, wait for $vmguest_hostanme shutdown"
	ssh root@$vmguest_hostname poweroff
	sleep 60
  else
	techo "		$vmguest_hostname is already shutdown"
  fi
}

startVM()
{
  vmhoster=$1
  vmguest_hostname=$2
  vmguest_imagename=$3
  status=`ssh root@$vmhoster "virsh list | grep $vmguest_imagename /dev/null 2>&1"`
  if  echo $status | grep "running" 1>/dev/null 2>&1 
  then
        techo "		$vmguest_hostname is already started"
  else
        ssh root@$vmhoster "virsh start $vmguest_imagename > /dev/null 2>&1 "
        techo "		virsh start called, sleep 75 seconds, wait for system boot up "
	sleep 75
  fi
}

reventVM()
{
  vmhoster=$1
  vmguest_hostname=$2
  vmguest_imagename=$3
  vmguest_currentimage=$4
  vmguest_reventimage=$5
  techo "[$vmguest_imagename] Revent VM STARTS..."
  techo "	+------------------------------------------------------+"
  techo "	| vm hoster   : $vmhoster"
  techo "	| vm guest    : $vmguest_hostname"
  techo "	| vm image    : $vmguest_imagename"
  techo "	| revent image: $vmguest_reventimage"
  techo "	| image file  : $vmguest_currentimage"
  techo "	+------------------------------------------------------+"
  techo "  	[1/3] : stutdown $vmguest_hostname"
  shutdownVM $vmhoster $vmguest_hostname $vmguest_imagename
  techo "  	[2/3] : revent image with ($vmguest_reventimage)"
  ssh root@$vmhoster "cp -f $vmguest_reventimage $vmguest_currentimage"
  techo "  	[3/3] : start the revented guest "
  startVM $vmhoster $vmguest_hostname $vmguest_imagename
  techo "[$vmguest_imagename] Revent VM Finished"
  echo ""
}

vmsave_as()
{
  vmlabel=$1
  vmalias=$2
  vmfilename=$3
  time=`date +"%F"`
  setupvm $vmlabel
	if [ -z $hoster ];then
		techo "	[hoster is not set]"
		exit
	elif [ -z $hostname ];then
		techo "	[hostname is not set]"
		exit
	elif [ -z $imagename ];then
		techo "	[imagename is not set]"
		exit
	elif [ -z $imagefile ];then
		techo "	[imagefile is not set]"
		exit
	elif [ -z $imagebase ];then
		techo "	[imagebase is not set]"
		exit
	fi
  saveas=$imagename.img.$vmfilename.$time
  techo "[$imagename] save as VM STARTS..."
  techo "       +------------------------------------------------------+"
  techo "       | vm hoster   : $hoster"
  techo "       | vm guest    : $hostname"
  techo "       | vm image    : $imagename"
  techo "       +------------------------------------------------------+"
  techo "       | save current image as : [$saveas]"
  techo "       |         and link it as: [$vmalias] "
  techo "       +------------------------------------------------------+"
  techo "       [1/5] : update the vmlabel in [$hostname] to $vmalias"
  ssh root@$hostname "echo $vmalias > /etc/sysconfig/vmlabel"
  techo "       [2/5] : stutdown current image: $hostname"
  shutdownVM $hoster $hostname $imagename
  techo "       [3/5] : save it as ($saveas)"
  ssh root@$hoster "cp -f $imagefile $imagebase/$saveas"
  techo "       [4/5] : link it with environmetn name: ($vmalias)"
  ssh root@$hoster "cd $imagebase;ln -s $saveas $vmalias"
  techo "       [5/5] : start the image"
  startVM $hoster $hostname $imagename
  techo "[$imagename] save as VM [$vmalias] Finished"
  echo ""
}

vmpoweroff()
{
  vmlabel=$1
  setupvm $vmlabel
	if [ -z $hoster ];then
		techo "	[hoster is not set]"
		exit
	elif [ -z $hostname ];then
		techo "	[hostname is not set]"
		exit
	elif [ -z $imagename ];then
		techo "	[imagename is not set]"
		exit
	fi
  techo "power off vm [$imagename] ..."
  techo "       +------------------------------------------------------+"
  techo "       | vm hoster   : $hoster"
  techo "       | vm guest    : $hostname"
  techo "       | vm image    : $imagename"
  techo "       +------------------------------------------------------+"
  shutdownVM $hoster $hostname $imagename
  techo "power off vm [$imagename] done" 
}

vmpoweron()
{
  vmlabel=$1
  setupvm $vmlabel
	if [ -z $hoster ];then
		techo "	[hoster is not set]"
		exit
	elif [ -z $hostname ];then
		techo "	[hostname is not set]"
		exit
	elif [ -z $imagename ];then
		techo "	[imagename is not set]"
		exit
	fi
  techo "power on vm [$imagename] ..."
  techo "       +------------------------------------------------------+"
  techo "       | vm hoster   : $hoster"
  techo "       | vm guest    : $hostname"
  techo "       | vm image    : $imagename"
  techo "       +------------------------------------------------------+"
  startVM $hoster $hostname $imagename
  techo "power on vm [$imagename] done" 
}

vmupdate()
{
  vmlabel=$1
  vmtarget=$2
  setupvm $vmlabel
	if [ -z $hoster ];then
		techo "	[hoster is not set]"
		exit
	elif [ -z $hostname ];then
		techo "	[hostname is not set]"
		exit
	elif [ -z $imagename ];then
		techo "	[imagename is not set]"
		exit
	elif [ -z $imagefile ];then
		techo "	[imagefile is not set]"
		exit
	elif [ -z $imagebase ];then
		techo "	[imagebase is not set]"
		exit
	fi
  techo "+warning+ the targeted vm enviroment [$vmtarget] has to exist"
  techo "          otherwise, a new file will be created. "
  techo "          Please use vmsave_as <alias name> <img file>"
  techo "update vm [$imagename] with current image file ..."
  techo "       +------------------------------------------------------+"
  techo "       | vm hoster   : $hoster"
  techo "       | vm guest    : $hostname"
  techo "       | vm image    : $imagename"
  techo "       | image to be update : $vmtarget"
  techo "       +------------------------------------------------------+"
  techo "       [1/3] stop current image [$imagename]"
  shutdownVM $hoster $hostname $imagename
  techo "       [2/3] : update image ($vmtarget)"
  ssh root@$hoster "cp -f $imagefile $imagebase/$vmtarget"
  techo "       [3/3] : start the current image again "
  startVM $hoster $hostname $imagename
  techo "update VM [$vmtarget] Finished"
  echo ""
}


vmup(){
	vmlabel=$1
	target=$2
	techo " set [$vmlabel] to environment [$target]"
	setupvm $vmlabel
	if [ -z $hoster ];then
		techo "	[hoster is not set]"
		exit
	elif [ -z $hostname ];then
		techo "	[hostname is not set]"
		exit
	elif [ -z $imagename ];then
		techo "	[imagename is not set]"
		exit
	elif [ -z $imagefile ];then
		techo "	[imagefile is not set]"
		exit
	elif [ -z $imagebase ];then
		techo "	[imagebase is not set]"
		exit
	elif [ -z $target ];then
		techo "	[target environment is not set]"
		exit
	fi
	reventVM $hoster $hostname $imagename $imagefile $imagebase/$target
}

