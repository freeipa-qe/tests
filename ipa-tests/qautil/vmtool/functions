#!/bin/sh

#. ./conf

LOG(){
  MSG=$1
  TIMESTAMP=`date "+[%D %H:%M:%S]"`
  if [ -z $LOGFILE ]
  then
	LOGFILE=/tmp/$RANDOM.log
	echo "" > $LOGFILE
  fi
  echo "$TIMESTAMP $MSG" >> $LOGFILE
}

techo(){
  # echo but add timestamp as beginning
  MSG=$1
  TIMESTAMP=`date "+[%D %H:%M:%S]"`
  echo "$TIMESTAMP $MSG"
}

shutdownVM()
{
  vmhoster=$1
  vmguest_hostname=$2
  vmguest_imagename=$3
  status=`ssh root@$vmhoster "virsh list | grep $vmguest_imagename"`
  if echo $status | grep "running" 1>/dev/null 2>&1
  then
	techo "		image is running, sending 'poweroff' signal to $vmguest_hostname"
  	techo "		sleep for 60 seconds, wait for $vmguest_hostanme fully shutdown"
	ssh root@$vmguest_hostname poweroff
	sleep 60
  else
	techo "		$vmguest_hostname is already shutdown"
  fi
}

startVM()
{
  vmhoster=$1
  vmguest_hostname=$2
  vmguest_imagename=$3
  status=`ssh root@$vmhoster "virsh list | grep $vmguest_imagename /dev/null 2>&1"`
  if  echo $status | grep "running" 1>/dev/null 2>&1 
  then
        techo "		$vmguest_hostname is already started"
  else
        ssh root@$vmhoster "virsh start $vmguest_imagename > /dev/null 2>&1 "
        techo "		virsh start called "
  fi
}

reventVM()
{
  vmhoster=$1
  vmguest_hostname=$2
  vmguest_imagename=$3
  vmguest_currentimage=$4
  vmguest_reventimage=$5
  techo "[$vmguest_imagename] Revent VM STARTS..."
  techo "	+------------------------------------------------------+"
  techo "	| vm hoster   : $vmhoster"
  techo "	| vm guest    : $vmguest_hostname"
  techo "	| vm image    : $vmguest_imagename"
  techo "	| revent image: $vmguest_reventimage"
  techo "	| image file  : $vmguest_currentimage"
  techo "	+------------------------------------------------------+"
  techo "  	[1/3] : stutdown $vmguest_hostname"
  shutdownVM $vmhoster $vmguest_hostname $vmguest_imagename
  techo "  	[2/3] : revent image with ($vmguest_reventimage)"
  ssh root@$vmhoster "cp -f $vmguest_reventimage $vmguest_currentimage"
  techo "  	[3/3] : start the revented guest "
  startVM $vmhoster $vmguest_hostname $vmguest_imagename
  techo "[$vmguest_imagename] Revent VM Finished"
  echo ""
}

vmsave_as()
{
  vmhoster=$1
  vmguest_hostname=$2
  vmguest_imagename=$3
  vmguest_currentimage=$4
  vmguest_image_alias=$5
  vmguest_image_savename=$6
  techo "[$vmguest_imagename] save as VM STARTS..."
  techo "       +------------------------------------------------------+"
  techo "       | vm hoster   : $vmhoster"
  techo "       | vm guest    : $vmguest_hostname"
  techo "       | vm image    : $vmguest_imagename"
  techo "       +------------------------------------------------------+"
  techo "       | save current image as : [$vmguest_savename]"
  techo "       |         and link it as: [$vmguest_image_alias] "
  techo "       +------------------------------------------------------+"
  techo "       [1/4] : stutdown current image: $vmguest_hostname"
  shutdownVM $vmhoster $vmguest_hostname $vmguest_imagename
  techo "       [2/4] : save it as ($vmguest_savename)"
  ssh root@$vmhoster "cp -f $vmguest_currentimage $vmguest_image_savename"
  techo "       [3/4] : link it with environmetn name: ($vmguest_image_alias)"
  ssh root@$vmhoster "ln -s $vmguest_image_savename $vmguest_image_alias"
  techo "       [4/4] : start the image"
  startVM $vmhoster $vmguest_hostname $vmguest_imagename
  techo "[$vmguest_imagename] save as VM Finished"
  echo ""

}

vmpoweroff()
{
  vmhoster=$1
  vmguest_hostname=$2
  vmguest_imagename=$3
  techo "power off vm [$vmguest_imagename] ..."
  techo "       +------------------------------------------------------+"
  techo "       | vm hoster   : $vmhoster"
  techo "       | vm guest    : $vmguest_hostname"
  techo "       | vm image    : $vmguest_imagename"
  techo "       +------------------------------------------------------+"
  shutdownVM $vmhoster $vmguest_hostname $vmguest_imagename
}

vmpoweron()
{
  vmhoster=$1
  vmguest_hostname=$2
  vmguest_imagename=$3
  techo "power on vm [$vmguest_imagename] ..."
  techo "       +------------------------------------------------------+"
  techo "       | vm hoster   : $vmhoster"
  techo "       | vm guest    : $vmguest_hostname"
  techo "       | vm image    : $vmguest_imagename"
  techo "       +------------------------------------------------------+"
  startVM $vmhoster $vmguest_hostname $vmguest_imagename
}

vmupdate()
{
  vmhoster=$1
  vmguest_hostname=$2
  vmguest_imagename=$3
  vmguest_currentimage=$4
  vmguest_image_tobeupdate=$5
  techo "update vm [$vmguest_imagename] with current image file ..."
  techo "       +------------------------------------------------------+"
  techo "       | vm hoster   : $vmhoster"
  techo "       | vm guest    : $vmguest_hostname"
  techo "       | vm image    : $vmguest_imagename"
  techo "       | image to be update : $vmguest_image_tobeupdate"
  techo "       +------------------------------------------------------+"
  techo"	[1/3] stop current image [$vmguest_imagename]"
  shutdownVM $vmhoster $vmguest_hostname $vmguest_imagename
  techo "       [2/3] : update image with ($vmguest_image_tobeupdate)"
  ssh root@$vmhoster "cp -f $vmguest_currentimage $vmguest_image_tobeupdate"
  techo "       [3/3] : start the current image again "
  startVM $vmhoster $vmguest_hostname $vmguest_imagename
  techo "update VM [$vmguest_image_tobeupdate] Finished"
  echo ""
}


vmup(){
	vmlabel=$1
	target=$2
	techo " set [$vmlabel] to environment [$target]"
	setupvm $vmlabel
	if [ -z $hoster ];then
		techo "	[hoster is not set]"
		exit
	elif [ -z $hostname ];then
		techo "	[hostname is not set]"
		exit
	elif [ -z $imagename ];then
		techo "	[imagename is not set]"
		exit
	elif [ -z $imagefile ];then
		techo "	[imagefile is not set]"
		exit
	elif [ -z $imagebase ];then
		techo "	[imagebase is not set]"
		exit
	elif [ -z $target ];then
		techo "	[target environment is not set]"
		exit
	fi
	reventVM $hoster $hostname $imagename $imagefile $imagebase/$target
}

##########################################
###   mv32a-vm possible environments   ###
##########################################
setmv32a(){
	vmlabel=$1
	if [ -z $vmlabel ]; then
		vmlabel=qa
	fi
	vmhoster=$mv32a_hoster
	vmguest_hostname=$mv32a_hostname
	vmguest_imagename=$mv32a_imagename
	vmguest_imagefile=$mv32a_imagefile
	vmguest_reventimage=$mv32a_imagebase/${vmlabel}
	reventVM $vmhoster $vmguest_hostname $vmguest_imagename $vmguest_imagefile $vmguest_reventimage
}


setmv32d(){
	vmlabel=$1
	if [ -z $vmlabel ]; then
		vmlabel=qa
	fi
	vmhoster=$mv32d_hoster
	vmguest_hostname=$mv32d_hostname
	vmguest_imagename=$mv32d_imagename
	vmguest_imagefile=$mv32d_imagefile
	vmguest_reventimage=$mv32d_imagebase/${vmlabel}
	reventVM $vmhoster $vmguest_hostname $vmguest_imagename $vmguest_imagefile $vmguest_reventimage
}

