/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.21
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

/*
  +----------------------------------------------------------------------+
  | PHP version 4.0                                                      |
  +----------------------------------------------------------------------+
  | Copyright (c) 1997, 1998, 1999, 2000, 2001 The PHP Group             |
  +----------------------------------------------------------------------+
  | This source file is subject to version 2.02 of the PHP license,      |
  | that is bundled with this package in the file LICENSE, and is        |
  | available at through the world-wide-web at                           |
  | http://www.php.net/license/2_02.txt.                                 |
  | If you did not receive a copy of the PHP license and are unable to   |
  | obtain it through the world-wide-web, please send a note to          |
  | license@php.net so we can mail you a copy immediately.               |
  +----------------------------------------------------------------------+
  | Authors:                                                             |
  |                                                                      |
  +----------------------------------------------------------------------+
 */


#ifndef PHP_PHPTET_H
#define PHP_PHPTET_H

extern zend_module_entry phptet_module_entry;
#define phpext_phptet_ptr &phptet_module_entry

#ifdef PHP_WIN32
# define PHP_PHPTET_API __declspec(dllexport)
#else
# define PHP_PHPTET_API
#endif

PHP_MINIT_FUNCTION(phptet);
PHP_MSHUTDOWN_FUNCTION(phptet);
PHP_RINIT_FUNCTION(phptet);
PHP_RSHUTDOWN_FUNCTION(phptet);
PHP_MINFO_FUNCTION(phptet);

ZEND_NAMED_FUNCTION(_wrap_tet_delete);
ZEND_NAMED_FUNCTION(_wrap_tet_exit);
ZEND_NAMED_FUNCTION(_wrap_tet_getvar);
ZEND_NAMED_FUNCTION(_wrap_tet_infoline);
ZEND_NAMED_FUNCTION(_wrap_tet_kill);
ZEND_NAMED_FUNCTION(_wrap_tet_logoff);
ZEND_NAMED_FUNCTION(_wrap_tet_minfoline);
ZEND_NAMED_FUNCTION(_wrap_tet_printf);
ZEND_NAMED_FUNCTION(_wrap_tet_reason);
ZEND_NAMED_FUNCTION(_wrap_tet_remgetlist);
ZEND_NAMED_FUNCTION(_wrap_tet_remgetsys);
ZEND_NAMED_FUNCTION(_wrap_tet_result);
ZEND_NAMED_FUNCTION(_wrap_tet_setblock);
ZEND_NAMED_FUNCTION(_wrap_tet_setcontext);
ZEND_NAMED_FUNCTION(_wrap_tet_spawn);
ZEND_NAMED_FUNCTION(_wrap_tet_wait);
ZEND_NAMED_FUNCTION(_wrap_tet_exec);
ZEND_NAMED_FUNCTION(_wrap_tet_fork);
ZEND_NAMED_FUNCTION(_wrap_tet_tcm_main);
ZEND_NAMED_FUNCTION(_wrap_tet_merror);
ZEND_NAMED_FUNCTION(_wrap_tet_error);
ZEND_NAMED_FUNCTION(_wrap_tet_child_set);
ZEND_NAMED_FUNCTION(_wrap_tet_child_get);
ZEND_NAMED_FUNCTION(_wrap_tet_errno_set);
ZEND_NAMED_FUNCTION(_wrap_tet_errno_get);
ZEND_NAMED_FUNCTION(_wrap_tet_errlist_set);
ZEND_NAMED_FUNCTION(_wrap_tet_errlist_get);
ZEND_NAMED_FUNCTION(_wrap_tet_nerr_set);
ZEND_NAMED_FUNCTION(_wrap_tet_nerr_get);
ZEND_NAMED_FUNCTION(_wrap_tet_nosigreset_set);
ZEND_NAMED_FUNCTION(_wrap_tet_nosigreset_get);
ZEND_NAMED_FUNCTION(_wrap_tet_pname_set);
ZEND_NAMED_FUNCTION(_wrap_tet_pname_get);
ZEND_NAMED_FUNCTION(_wrap_tet_thistest_set);
ZEND_NAMED_FUNCTION(_wrap_tet_thistest_get);
ZEND_NAMED_FUNCTION(_wrap_tet_block_set);
ZEND_NAMED_FUNCTION(_wrap_tet_block_get);
ZEND_NAMED_FUNCTION(_wrap_tet_sequence_set);
ZEND_NAMED_FUNCTION(_wrap_tet_sequence_get);
ZEND_NAMED_FUNCTION(_wrap_php_startup_set);
ZEND_NAMED_FUNCTION(_wrap_php_startup_get);
ZEND_NAMED_FUNCTION(_wrap_php_cleanup_set);
ZEND_NAMED_FUNCTION(_wrap_php_cleanup_get);
ZEND_NAMED_FUNCTION(_wrap_php_gettp_set);
ZEND_NAMED_FUNCTION(_wrap_php_gettp_get);
ZEND_NAMED_FUNCTION(_wrap_php_getminic_set);
ZEND_NAMED_FUNCTION(_wrap_php_getminic_get);
ZEND_NAMED_FUNCTION(_wrap_php_getmaxic_set);
ZEND_NAMED_FUNCTION(_wrap_php_getmaxic_get);
ZEND_NAMED_FUNCTION(_wrap_php_isdefic_set);
ZEND_NAMED_FUNCTION(_wrap_php_isdefic_get);
ZEND_NAMED_FUNCTION(_wrap_php_gettpcount_set);
ZEND_NAMED_FUNCTION(_wrap_php_gettpcount_get);
ZEND_NAMED_FUNCTION(_wrap_php_gettestnum_set);
ZEND_NAMED_FUNCTION(_wrap_php_gettestnum_get);
ZEND_NAMED_FUNCTION(_wrap_phptet_set_iclist);
ZEND_NAMED_FUNCTION(_wrap_phptet_set_func);
ZEND_NAMED_FUNCTION(_wrap_tet_getmaxic);
ZEND_NAMED_FUNCTION(_wrap_tet_getminic);
ZEND_NAMED_FUNCTION(_wrap_tet_isdefic);
ZEND_NAMED_FUNCTION(_wrap_tet_gettpcount);
ZEND_NAMED_FUNCTION(_wrap_tet_gettestnum);
ZEND_NAMED_FUNCTION(_wrap_tet_invoketp);
ZEND_NAMED_FUNCTION(_wrap_phptet_startup);
ZEND_NAMED_FUNCTION(_wrap_phptet_cleanup);
ZEND_NAMED_FUNCTION(_wrap_tet_startup_set);
ZEND_NAMED_FUNCTION(_wrap_tet_startup_get);
ZEND_NAMED_FUNCTION(_wrap_tet_cleanup_set);
ZEND_NAMED_FUNCTION(_wrap_tet_cleanup_get);
ZEND_NAMED_FUNCTION(_wrap_tet_main);
ZEND_NAMED_FUNCTION(_wrap_tet_tcmchild_main);
/*If you declare any globals in php_phptet.h uncomment this:
ZEND_BEGIN_MODULE_GLOBALS(phptet)
ZEND_END_MODULE_GLOBALS(phptet)
*/
#ifdef ZTS
#define PHPTET_D  zend_phptet_globals *phptet_globals
#define PHPTET_DC  , PHPTET_D
#define PHPTET_C  phptet_globals
#define PHPTET_CC  , PHPTET_C
#define PHPTET_SG(v)  (phptet_globals->v)
#define PHPTET_FETCH()  zend_phptet_globals *phptet_globals = ts_resource(phptet_globals_id)
#else
#define PHPTET_D
#define PHPTET_DC
#define PHPTET_C
#define PHPTET_CC
#define PHPTET_SG(v)  (phptet_globals.v)
#define PHPTET_FETCH()
#endif

#endif /* PHP_PHPTET_H */
