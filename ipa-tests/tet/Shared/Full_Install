#!/bin/ksh

setupssh()
{
	echo "START setupssh"
	echo "running ssh setup"
	for s in $SERVERS; do
		if [ "$s" != "" ]; then
			if [ "$DSTET_DEBUG" = "y" ]; then echo "working on $s now"; fi
			echo "working on $s now"
			setup_ssh_keys $s
			ret=$?
			if [ $ret -ne 0 ]; then
				echo "Setup of $s ssh failed"
				return 1
			fi
		if [ "$DSTET_DEBUG" = "y" ]; then echo "done working on $s"; fi
		fi
	done
	for s in $CLIENTS; do
		if [ "$s" != "" ]; then
			if [ "$DSTET_DEBUG" = "y" ]; then echo "working on $s now"; fi
			echo "working on $s now"
			setup_ssh_keys $s
			ret=$?
			if [ $ret -ne 0 ]; then
				echo "Setup of $s ssh failed"
				return 1
			fi
		if [ "$DSTET_DEBUG" = "y" ]; then echo "done working on $s"; fi
		fi
	done

	return 0
}

######################################################################
tp1()
{
	echo "START tp1"
	for s in $SERVERS; do
		if [ "$s" != "" ]; then
			if [ "$DSTET_DEBUG" = "y" ]; then echo "working on $s now"; fi
			SetupRepo $s
			ret=$?
			if [ $ret -ne 0 ]; then
				echo "Install of server RPM on $s ssh failed"
				return 1
			fi
		if [ "$DSTET_DEBUG" = "y" ]; then echo "done working on $s"; fi
		fi
	done
	for s in $CLIENTS; do
		if [ "$s" != "" ]; then
			if [ "$DSTET_DEBUG" = "y" ]; then echo "working on $s now"; fi
			SetupRepo $s
			ret=$?
			if [ $ret -ne 0 ]; then
				echo "Install of server RPM on $s ssh failed"
				return 1
			fi
		if [ "$DSTET_DEBUG" = "y" ]; then echo "done working on $s"; fi
		fi
	done

	return 0
	echo "tp1 finish"
}
######################################################################
tp2()
{
	echo "START tp2"
	for s in $SERVERS; do
		if [ "$s" != "" ]; then
			if [ "$DSTET_DEBUG" = "y" ]; then echo "working on $s now"; fi
			InstallServerRPM $s
			ret=$?
			if [ $ret -ne 0 ]; then
				echo "Install of server RPM on $s ssh failed"
				return 1
			fi
			if [ "$DSTET_DEBUG" = "y" ]; then echo "done working on $s"; fi
		fi
	done
	for s in $CLIENTS; do
		if [ "$s" != "" ]; then
			if [ "$DSTET_DEBUG" = "y" ]; then echo "working on $s now"; fi
			InstallClientRPM $s
			ret=$?
			if [ $ret -ne 0 ]; then
				echo "Install of server RPM on $s ssh failed"
				return 1
			fi
			if [ "$DSTET_DEBUG" = "y" ]; then echo "done working on $s"; fi
		fi
	done

	return 0

}
######################################################################

######################################################################
# This is a negitive test case. The test itself will succeeed, but the 
# underlying test runs a bad ipa-server-install that should fail
######################################################################
tp3()
{
	echo "START tp3"
	for s in $SERVERS; do
		if [ "$s" != "" ]; then
			if [ "$DSTET_DEBUG" = "y" ]; then echo "working on $s now"; fi
			SetupServerBogus $s
			ret=$?
			if [ $ret -ne 0 ]; then
				echo "server-install of server on $s ssh failed"
				return 1
			fi
			if [ "$DSTET_DEBUG" = "y" ]; then echo "done working on $s"; fi
		fi
	done
	for s in $CLIENTS; do
		if [ "$s" != "" ]; then
			if [ "$DSTET_DEBUG" = "y" ]; then echo "working on $s now"; fi
			SetupClientBogus $s
			ret=$?
			if [ $ret -ne 0 ]; then
				echo "client-install of server on $s ssh failed"
				return 1
			fi
			if [ "$DSTET_DEBUG" = "y" ]; then echo "done working on $s"; fi
		fi
	done

	return 0

}
######################################################################

######################################################################
tp4()
{
	echo "START tp4"
	for s in $SERVERS; do
		if [ "$s" != "" ]; then
			if [ "$DSTET_DEBUG" = "y" ]; then echo "working on $s now"; fi
			echo "working on $s now"
			SetupServer $s
			ret=$?
			if [ $ret -ne 0 ]; then
				echo "server-install of server on $s ssh failed"
				return 1
			fi
			FixBindServer $s
			ret=$?
			if [ $ret -ne 0 ]; then
				echo "fix-bind-server on $s ssh failed"
				return 1
			fi
			if [ "$DSTET_DEBUG" = "y" ]; then echo "done working on $s"; fi
		fi
	done
	for s in $CLIENTS; do
		if [ "$s" != "" ]; then
			echo "working on $s now"
			if [ "$DSTET_DEBUG" = "y" ]; then echo "working on $s now"; fi
			SetupClient $s
			ret=$?
			if [ $ret -ne 0 ]; then
				echo "client-install of server on $s ssh failed"
				return 1
			fi
		fi
		if [ "$DSTET_DEBUG" = "y" ]; then echo "done working on $s"; fi
	done

	return 0

}
######################################################################

instclean()
{
	echo "instclean start"
	for s in $SERVERS; do
		if [ "$s" != "" ]; then
			if [ "$DSTET_DEBUG" = "y" ]; then echo "working on $s now"; fi
			eval_vars $s
			ssh root@$FULLHOSTNAME 'kdestroy'
			ret=$?
			if [ $ret != 0 ]; then
	       			echo "ERROR - kdestroy on server $s failed, continuing anyway";
			fi
			if [ "$DSTET_DEBUG" = "y" ]; then echo "done working on $s"; fi
		fi

	done
	for s in $CLIENTS; do
		if [ "$s" != "" ]; then
			if [ "$DSTET_DEBUG" = "y" ]; then echo "working on $s now"; fi
			eval_vars $s
			ssh root@$FULLHOSTNAME 'kdestroy'
			ret=$?
			if [ $ret != 0 ]; then
	       			echo "ERROR - kdestroy on client $s failed, continuing anyway";
			fi
			if [ "$DSTET_DEBUG" = "y" ]; then echo "done working on $s"; fi
		fi
	done

	return 0
	echo "instclean finish"

}

######################################################################

RunFullInstall()
{
	echo "Running setup on all hosts"

	# The next line is required as it picks up data about the servers to use
	CheckAlive
	setupssh
	tp1
	tp2
	tp3
	tp4
	instclean

}

. $TESTING_SHARED/instlib.ksh
. $TESTING_SHARED/shared.ksh

if [ "$DSTET_DEBUG" = "y" ]; then set -x; fi
RunFullInstall

#. $TET_ROOT/lib/ksh/tcm.ksh
