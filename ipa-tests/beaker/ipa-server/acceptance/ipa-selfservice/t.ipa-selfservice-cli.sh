#!/bin/bash
# By  : Automatic Generated by at.3.testcase.pl
# Date: Wed Oct 19 14:47:04 2011

selfservice_cli()
{
	selfservice_add
	selfservice_del
	selfservice_find
	selfservice_mod
	selfservice_show
} #selfservice

#############################################
#  test suite: selfservice-add (9 test cases)
#############################################
selfservice_add()
{
	selfservice_add_envsetup 
### prompts for input...not a valid non-interactive test...requires --attrs=
	###selfservice_add_1001  #test_scenario (positive test): [--all]
	selfservice_add_1002  #test_scenario (negative test): [--all --attrs;negative;LIST --permissions;positive;LIST --raw]
	selfservice_add_1003  #test_scenario (negative test): [--all --attrs;positive;LIST --permissions;negative;LIST --raw]
	selfservice_add_1004  #test_scenario (positive test): [--all --attrs;positive;LIST --permissions;positive;LIST --raw]
	selfservice_add_1005  #test_scenario (negative test): [--attrs;negative;LIST]
	selfservice_add_1006  #test_scenario (positive test): [--attrs;positive;LIST]
### prompts for input...not a valid non-interactive test...requires --attrs=
	#selfservice_add_1007  #test_scenario (negative test): [--permissions;negative;LIST]
### prompts for input...not a valid non-interactive test...requires --attrs=
	###selfservice_add_1008  #test_scenario (positive test): [--permissions;positive;LIST]
### prompts for input...not a valid non-interactive test...requires --attrs=
	###selfservice_add_1009  #test_scenario (positive test): [--raw]
	selfservice_add_envcleanup
} #selfservice-add

selfservice_add_envsetup()
{
	rlPhaseStartSetup "selfservice_add_envsetup"
		#environment setup starts here
		#environment setup ends   here
	rlPhaseEnd
} #envsetup

selfservice_add_envcleanup()
{
	rlPhaseStartCleanup "selfservice_add_envcleanup"
		#environment cleanup starts here
		KinitAsAdmin
		for i in 1004 1006; do
			rlRun "ipa selfservice-del selfservice_add_$i" 0  "selfservice-del selfservice_add_$i rule used for test"
		done
		#environment cleanup ends   here
		Kcleanup
	rlPhaseEnd
} #envcleanup

selfservice_add_1001() ### prompts for input...not a valid non-interactive test...requires --attrs=
{
	rlPhaseStartTest "selfservice_add_1001 [positive test] --all"
		local testID="selfservice_add_1001"
		local tmpout=$TmpDir/selfservice_add_1001.$RANDOM.out
		KinitAsAdmin
		rlRun "ipa selfservice-add $testID --all " 0 "test options: " 
		Kcleanup
		rm $tmpout
	rlPhaseEnd
} #selfservice_add_1001

selfservice_add_1002()
{
	rlPhaseStartTest "selfservice_add_1002 [negative test] --all --attrs;negative;LIST --permissions;positive;LIST --raw"
		local testID="selfservice_add_1002"
		local tmpout=$TmpDir/selfservice_add_1002.$RANDOM.out
		KinitAsAdmin
		local attrs_TestValue_Negative="badattr" #attrs;negative;LIST 
		local permissions_TestValue="write" #permissions;positive;LIST 
		local expectedErrMsg="ipa: ERROR: targetattr \"badattr\" does not exist in schema."
		local expectedErrCode=1
		qaRun "ipa selfservice-add $testID --all  --attrs=$attrs_TestValue_Negative  --permissions=$permissions_TestValue --raw " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  [attrs]=[$attrs_TestValue_Negative] [permissions]=[$permissions_TestValue]" 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_add_1002

selfservice_add_1003()
{
	rlPhaseStartTest "selfservice_add_1003 [negative test] --all --attrs;positive;LIST --permissions;negative;LIST --raw"
		local testID="selfservice_add_1003"
		local tmpout=$TmpDir/selfservice_add_1003.$RANDOM.out
		KinitAsAdmin
		local attrs_TestValue="telephonenumber,mobile,pager,facsimiletelephonenumber" #attrs;positive;LIST 
		local permissions_TestValue_Negative="badperm" #permissions;negative;LIST 
		local expectedErrMsg="ipa: ERROR: invalid 'permissions': \"badperm\" is not a valid permission"
		local expectedErrCode=1
		qaRun "ipa selfservice-add $testID --all  --attrs=$attrs_TestValue  --permissions=$permissions_TestValue_Negative --raw " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  [attrs]=[$attrs_TestValue] [permissions]=[$permissions_TestValue_Negative]" 
		Kcleanup
		rm $tmpout
	rlPhaseEnd
} #selfservice_add_1003

selfservice_add_1004() #BZ 772106 -- ipa selfservice-add --raw returns "internal error" message
{
	rlPhaseStartTest "selfservice_add_1004 [positive test] --all --attrs;positive;LIST --permissions;positive;LIST --raw"
		local testID="selfservice_add_1004"
		local tmpout=$TmpDir/selfservice_add_1004.$RANDOM.out
		KinitAsAdmin
		local attrs_TestValue="telephonenumber,mobile,pager,facsimiletelephonenumber" #attrs;positive;LIST 
		local permissions_TestValue="write" #permissions;positive;LIST 
		#rlRun "ipa selfservice-add $testID --all  --attrs=$attrs_TestValue  --permissions=$permissions_TestValue --raw " 0 "test options:  [attrs]=[$attrs_TestValue] [permissions]=[$permissions_TestValue]"
		rlRun "ipa selfservice-add $testID --all  --attrs=$attrs_TestValue  --permissions=$permissions_TestValue --raw > $tmpout 2>&1" 0 
		if [ $(grep "ipa: ERROR: an internal error has occurred" $tmpout | wc -l) -eq 1 ]; then
			rlFail "BZ 772106 -- ipa selfservice-add --raw returns \"internal error\" message"
		else
			rlFail "Unknown failure detected...see output below..."
			cat $tmpout
		fi

		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_add_1004

selfservice_add_1005()
{
	rlPhaseStartTest "selfservice_add_1005 [negative test] --attrs;negative;LIST"
		local testID="selfservice_add_1005"
		local tmpout=$TmpDir/selfservice_add_1005.$RANDOM.out
		KinitAsAdmin
		local attrs_TestValue_Negative="badattrs" #attrs;negative;LIST
		local expectedErrMsg="ipa: ERROR: targetattr \"badattrs\" does not exist in schema."
		local expectedErrCode=1
		qaRun "ipa selfservice-add $testID  --attrs=$attrs_TestValue_Negative " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  [attrs]=[$attrs_TestValue_Negative]" 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_add_1005

selfservice_add_1006()
{
	rlPhaseStartTest "selfservice_add_1006 [positive test] --attrs;positive;LIST"
		local testID="selfservice_add_1006"
		local tmpout=$TmpDir/selfservice_add_1006.$RANDOM.out
		KinitAsAdmin
		local attrs_TestValue="telephonenumber,mobile,pager,facsimiletelephonenumber" #attrs;positive;LIST
		rlRun "ipa selfservice-add $testID  --attrs=$attrs_TestValue " 0 "test options:  [attrs]=[$attrs_TestValue]" 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_add_1006

selfservice_add_1007() ### prompts for input...not a valid non-interactive test...requires --attrs=
{
	rlPhaseStartTest "selfservice_add_1007 [negative test] --permissions;negative;LIST"
		local testID="selfservice_add_1007"
		local tmpout=$TmpDir/selfservice_add_1007.$RANDOM.out
		KinitAsAdmin
		local permissions_TestValue_Negative="badperm" #permissions;negative;LIST
		local expectedErrMsg=replace_me
		local expectedErrCode=1
		qaRun "ipa selfservice-add $testID  --permissions=$permissions_TestValue_Negative" "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  [permissions]=[$permissions_TestValue_Negative]" 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_add_1007

selfservice_add_1008() ### prompts for input...not a valid non-interactive test...requires --attrs=
{
	rlPhaseStartTest "selfservice_add_1008 [positive test] --permissions;positive;LIST"
		local testID="selfservice_add_1008"
		local tmpout=$TmpDir/selfservice_add_1008.$RANDOM.out
		KinitAsAdmin
		local permissions_TestValue="replace_me" #permissions;positive;LIST
		rlRun "ipa selfservice-add $testID  --permissions=$permissions_TestValue " 0 "test options:  [permissions]=[$permissions_TestValue]" 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_add_1008

selfservice_add_1009() ### prompts for input...not a valid non-interactive test...requires --attrs=
{
	rlPhaseStartTest "selfservice_add_1009 [positive test] --raw"
		local testID="selfservice_add_1009"
		local tmpout=$TmpDir/selfservice_add_1009.$RANDOM.out
		KinitAsAdmin
		rlRun "ipa selfservice-add $testID --raw " 0 "test options: " 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_add_1009

#END OF TEST CASE for [selfservice-add]

#############################################
#  test suite: selfservice-del (9 test cases)
#############################################
selfservice_del()
{
	selfservice_del_envsetup
	selfservice_del_1001
	selfservice_del_1002
	selfservice_del_envcleanup
} #selfservice-del

selfservice_del_envsetup()
{
	rlPhaseStartSetup "selfservice_del_envsetup"
		#environment setup starts here
		KinitAsAdmin
		for i in $(seq 1001 1001); do   ### yes this should be 1001 1001 so it only creates one user.
			rlRun "ipa selfservice-add --attrs=l --permissions=write selfservice_del_$i" 0 "selfservice-add selfservice_del_$i rule needed for test"
		done
		Kcleanup
		#environment setup ends   here
	rlPhaseEnd
} #envsetup

selfservice_del_envcleanup()
{
	rlPhaseStartCleanup "selfservice_del_envcleanup"
		#environment cleanup starts here
		#environment cleanup ends   here
	rlPhaseEnd
} #envcleanup

selfservice_del_1001()
{
	rlPhaseStartTest "selfservice_del_1001 [positive test]"
		local testID="selfservice_del_1001"
		local tmpout=$TmpDir/selfservice_find_1001.$RANDOM.out
		KinitAsAdmin
		rlRun "ipa selfservice-del $testID" 0 "test options: (delete existing rule)"
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_del_1001

selfservice_del_1002()
{
	rlPhaseStartTest "selfservice_del_1002 [negative test] "
		local testID="selfservice_del_1002"
		local tmpout=$TmpDir/selfservice_del_1002.$RANDOM.out
		KinitAsAdmin
		local name_TestValue_Negative="badname" 
		local expectedErrMsg="ipa: ERROR: ACI with name \"badname\" not found"
		local expectedErrCode=2
		qaRun "ipa selfservice-del $name_TestValue_Negative" "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  (delete non-existent rule)"
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_del_1002

#END OF TEST CASE for [selfservice-del]

#############################################
#  test suite: selfservice-find (12 test cases)
#############################################
selfservice_find()
{
	selfservice_find_envsetup
	selfservice_find_1001  #test_scenario (positive test): [--all]
	selfservice_find_1002  #test_scenario (negative test): [--all --attrs;negative;LIST --name;positive;STR --permissions;positive;LIST --raw]
	selfservice_find_1003  #test_scenario (negative test): [--all --attrs;positive;LIST --name;negative;STR --permissions;positive;LIST --raw]
	selfservice_find_1004  #test_scenario (negative test): [--all --attrs;positive;LIST --name;positive;STR --permissions;negative;LIST --raw]
	selfservice_find_1005  #test_scenario (positive test): [--all --attrs;positive;LIST --name;positive;STR --permissions;positive;LIST --raw]
	selfservice_find_1006  #test_scenario (negative test): [--attrs;negative;LIST]
	selfservice_find_1007  #test_scenario (positive test): [--attrs;positive;LIST]
	selfservice_find_1008  #test_scenario (negative test): [--name;negative;STR]
	selfservice_find_1009  #test_scenario (positive test): [--name;positive;STR]
	selfservice_find_1010  #test_scenario (negative test): [--permissions;negative;LIST]
	selfservice_find_1011  #test_scenario (positive test): [--permissions;positive;LIST]
	selfservice_find_1012  #test_scenario (positive test): [--raw]
	selfservice_find_1013  #test_scenario (positive test): --pkey-only 
	selfservice_find_envcleanup
} #selfservice-find

selfservice_find_envsetup()
{
	rlPhaseStartSetup "selfservice_find_envsetup"
		#environment setup starts here
		KinitAsAdmin
		for i in $(seq 1001 1012); do
			rlRun "ipa selfservice-add --attrs=l --permissions=write selfservice_find_$i" 0 "selfservice-add selfservice_find_$i rule needed for test"
		done
		Kcleanup
		#environment setup ends   here
	rlPhaseEnd
} #envsetup

selfservice_find_envcleanup()
{
	rlPhaseStartCleanup "selfservice_find_envcleanup"
		#environment cleanup starts here
		KinitAsAdmin
		for i in $(seq 1001 1012); do
			rlRun "ipa selfservice-del selfservice_find_$i" 0 "selfservice-del selfservice_find_$i rule used for test"
		done
		Kcleanup
		#environment cleanup ends   here
	rlPhaseEnd
} #envcleanup

selfservice_find_1001()
{
	rlPhaseStartTest "selfservice_find_1001 [positive test] --all"
		local testID="selfservice_find_1001"
		local tmpout=$TmpDir/selfservice_find_1001.$RANDOM.out
		KinitAsAdmin
		rlRun "ipa selfservice-find $testID --all " 0 "test options: " 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_find_1001

selfservice_find_1002()
{
	rlPhaseStartTest "selfservice_find_1002 [negative test] --all --attrs;negative;LIST --name;positive;STR --permissions;positive;LIST --raw"
		local testID="selfservice_find_1002"
		local tmpout=$TmpDir/selfservice_find_1002.$RANDOM.out
		KinitAsAdmin
		local attrs_TestValue_Negative="badattrs" #attrs;negative;LIST 
		local name_TestValue="$testID" #name;positive;STR 
		local permissions_TestValue="write" #permissions;positive;LIST 
		local expectedErrMsg="Number of entries returned 0"
		local expectedErrCode=1
		qaRun "ipa selfservice-find $testID --all  --attrs=$attrs_TestValue_Negative  --name=$name_TestValue  --permissions=$permissions_TestValue --raw " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  (non-existent attr) [attrs]=[$attrs_TestValue_Negative] [name]=[$name_TestValue] [permissions]=[$permissions_TestValue]" 
		local attrs_TestValue_Negative="mobile" #attrs;negative;LIST 
		qaRun "ipa selfservice-find $testID --all  --attrs=$attrs_TestValue_Negative  --name=$name_TestValue  --permissions=$permissions_TestValue --raw " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  (wrong attr for rule) [attrs]=[$attrs_TestValue_Negative] [name]=[$name_TestValue] [permissions]=[$permissions_TestValue]" 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_find_1002

selfservice_find_1003()
{
	rlPhaseStartTest "selfservice_find_1003 [negative test] --all --attrs;positive;LIST --name;negative;STR --permissions;positive;LIST --raw"
		local testID="selfservice_find_1003"
		local tmpout=$TmpDir/selfservice_find_1003.$RANDOM.out
		KinitAsAdmin
		local attrs_TestValue="l" #attrs;positive;LIST 
		local name_TestValue_Negative="badname" #name;negative;STR 
		local permissions_TestValue="write" #permissions;positive;LIST 
		local expectedErrMsg="Number of entries returned 0"
		local expectedErrCode=1
		qaRun "ipa selfservice-find $testID --all  --attrs=$attrs_TestValue  --name=$name_TestValue_Negative  --permissions=$permissions_TestValue --raw " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  (arg of valid name) [attrs]=[$attrs_TestValue] [name]=[$name_TestValue_Negative] [permissions]=[$permissions_TestValue]" 
		qaRun "ipa selfservice-find $name_TestValue_Negative --all  --attrs=$attrs_TestValue  --name=$name_TestValue_Negative  --permissions=$permissions_TestValue --raw " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  (arg of invalid name) [attrs]=[$attrs_TestValue] [name]=[$name_TestValue_Negative] [permissions]=[$permissions_TestValue]" 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_find_1003

selfservice_find_1004() # BZ 747693 -- ipa selfservice-find --raw returns "internal error" 
{
	rlPhaseStartTest "selfservice_find_1004 [negative test] --all --attrs;positive;LIST --name;positive;STR --permissions;negative;LIST --raw"
		local testID="selfservice_find_1004"
		local tmpout=$TmpDir/selfservice_find_1004.$RANDOM.out
		KinitAsAdmin
		local attrs_TestValue="l" #attrs;positive;LIST 
		local name_TestValue="$testID" #name;positive;STR 
		local permissions_TestValue_Negative="badperm" #permissions;negative;LIST 
		local expectedErrMsg="Number of entries returned 0"
		local expectedErrCode=1
		qaRun "ipa selfservice-find $testID --all  --attrs=$attrs_TestValue  --name=$name_TestValue  --permissions=$permissions_TestValue_Negative --raw " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  [attrs]=[$attrs_TestValue] [name]=[$name_TestValue] [permissions]=[$permissions_TestValue_Negative]" 
		if [ $(grep "ipa: ERROR: an internal error has occurred" $tmpout | wc -l) -eq 1 ]; then
			rlFail "BZ 747693 -- ipa selfservice-find --raw returns \"internal error\""
		fi
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_find_1004

selfservice_find_1005() # BZ 747693 -- ipa selfservice-find --raw returns "internal error" 
{
	rlPhaseStartTest "selfservice_find_1005 [positive test] --all --attrs;positive;LIST --name;positive;STR --permissions;positive;LIST --raw"
		local testID="selfservice_find_1005"
		local tmpout=$TmpDir/selfservice_find_1005.$RANDOM.out
		KinitAsAdmin
		local attrs_TestValue="l" #attrs;positive;LIST 
		local name_TestValue="$testID" #name;positive;STR 
		local permissions_TestValue="write" #permissions;positive;LIST 
		#rlRun "ipa selfservice-find $testID --all  --attrs=$attrs_TestValue  --name=$name_TestValue  --permissions=$permissions_TestValue --raw " 0 "test options:  (with --raw) [attrs]=[$attrs_TestValue] [name]=[$name_TestValue] [permissions]=[$permissions_TestValue]" 
		#rlRun "ipa selfservice-find $testID --all  --attrs=$attrs_TestValue  --name=$name_TestValue  --permissions=$permissions_TestValue " 0 "test options:  (without --raw) [attrs]=[$attrs_TestValue] [name]=[$name_TestValue] [permissions]=[$permissions_TestValue]" 
		local expectedErrMsg="aciname: $testID"
		local expectedErrCode=0
		qaRun "ipa selfservice-find $testID --all  --attrs=$attrs_TestValue  --name=$name_TestValue  --permissions=$permissions_TestValue --raw " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  (without --raw) [attrs]=[$attrs_TestValue] [name]=[$name_TestValue] [permissions]=[$permissions_TestValue]"
		if [ $(grep "ipa: ERROR: an internal error has occurred" $tmpout | wc -l) -eq 1 ]; then
			rlFail "BZ 747693 -- ipa selfservice-find --raw returns \"internal error\""
		fi
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_find_1005

selfservice_find_1006()
{
	rlPhaseStartTest "selfservice_find_1006 [negative test] --attrs;negative;LIST"
		local testID="selfservice_find_1006"
		local tmpout=$TmpDir/selfservice_find_1006.$RANDOM.out
		KinitAsAdmin
		local attrs_TestValue_Negative="mobile" #attrs;negative;LIST
		local expectedErrMsg="Number of entries returned 0"
		local expectedErrCode=1
		qaRun "ipa selfservice-find $testID  --attrs=$attrs_TestValue_Negative " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  (wrong attrs) [attrs]=[$attrs_TestValue_Negative]" 
		local attrs_TestValue_Negative="badattrs" #attrs;negative;LIST
		qaRun "ipa selfservice-find $testID  --attrs=$attrs_TestValue_Negative " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  (non-existent attrs) [attrs]=[$attrs_TestValue_Negative]" 
		qaRun "ipa selfservice-find --attrs=$attrs_TestValue_Negative " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  (without arg of valid name) [attrs]=[$attrs_TestValue_Negative]" 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_find_1006

selfservice_find_1007()
{
	rlPhaseStartTest "selfservice_find_1007 [positive test] --attrs;positive;LIST"
		local testID="selfservice_find_1007"
		local tmpout=$TmpDir/selfservice_find_1007.$RANDOM.out
		KinitAsAdmin
		local attrs_TestValue="l" #attrs;positive;LIST
		rlRun "ipa selfservice-find $testID  --attrs=$attrs_TestValue " 0 "test options:  (with arg of name) [attrs]=[$attrs_TestValue]" 
		rlRun "ipa selfservice-find --attrs=$attrs_TestValue " 0 "test options:  (without arg of name) [attrs]=[$attrs_TestValue]" 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_find_1007

selfservice_find_1008()
{
	rlPhaseStartTest "selfservice_find_1008 [negative test] --name;negative;STR"
		local testID="selfservice_find_1008"
		local tmpout=$TmpDir/selfservice_find_1008.$RANDOM.out
		KinitAsAdmin
		local name_TestValue_Negative="badname" #name;negative;STR
		local expectedErrMsg="Number of entries returned 0"
		local expectedErrCode=1
		qaRun "ipa selfservice-find $testID  --name=$name_TestValue_Negative " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  (arg of valid name) [name]=[$name_TestValue_Negative]" 
		qaRun "ipa selfservice-find $name_TestValue_Negative  --name=$name_TestValue_Negative " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  (arg of invalid name) [name]=[$name_TestValue_Negative]" 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_find_1008

selfservice_find_1009()
{
	rlPhaseStartTest "selfservice_find_1009 [positive test] --name;positive;STR"
		local testID="selfservice_find_1009"
		local tmpout=$TmpDir/selfservice_find_1009.$RANDOM.out
		KinitAsAdmin
		local name_TestValue="$testID" #name;positive;STR
		rlRun "ipa selfservice-find $testID  --name=$name_TestValue " 0 "test options:  [name]=[$name_TestValue]" 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_find_1009

selfservice_find_1010()
{
	rlPhaseStartTest "selfservice_find_1010 [negative test] --permissions;negative;LIST"
		local testID="selfservice_find_1010"
		local tmpout=$TmpDir/selfservice_find_1010.$RANDOM.out
		KinitAsAdmin
		local permissions_TestValue_Negative="badperm" #permissions;negative;LIST
		local expectedErrMsg="Number of entries returned 0"
		local expectedErrCode=1
		qaRun "ipa selfservice-find $testID  --permissions=$permissions_TestValue_Negative " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  [permissions]=[$permissions_TestValue_Negative]" 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_find_1010

selfservice_find_1011()
{
	rlPhaseStartTest "selfservice_find_1011 [positive test] --permissions;positive;LIST"
		local testID="selfservice_find_1011"
		local tmpout=$TmpDir/selfservice_find_1011.$RANDOM.out
		KinitAsAdmin
		local permissions_TestValue="write" #permissions;positive;LIST
		rlRun "ipa selfservice-find $testID  --permissions=$permissions_TestValue " 0 "test options:  (with arg of name) [permissions]=[$permissions_TestValue]" 
		rlRun "ipa selfservice-find --permissions=$permissions_TestValue " 0 "test options:  (without arg of name) [permissions]=[$permissions_TestValue]" 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_find_1011

selfservice_find_1012() # BZ 747693 -- ipa selfservice-find --raw returns "internal error"
{
	rlPhaseStartTest "selfservice_find_1012 [positive test] --raw"
		local testID="selfservice_find_1012"
		local tmpout=$TmpDir/selfservice_find_1012.$RANDOM.out
		KinitAsAdmin
		#rlRun "ipa selfservice-find $testID --raw " 0 "test options: " 
		local expectedErrMsg="aciname: $testID"
		local expectedErrCode=0
		qaRun "ipa selfservice-find $testID --raw " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options: "
		if [ $(grep "ipa: ERROR: an internal error has occurred" $tmpout | wc -l) -eq 1 ]; then
			rlFail "BZ 747693 -- ipa selfservice-find --raw returns \"internal error\""
		fi
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_find_1012

selfservice_find_1013()
{
	rlPhaseStartTest "selfservice_find_1013 --pkey-only [positive test]"
		KinitAsAdmin
		attrs_TestValue="telephonenumber,mobile,pager,facsimiletelephonenumber" #attrs;positive;LIST
		ipa_command_to_test="selfservice"
		pkey_addstringa="--attrs=$attrs_TestValue"
		pkey_addstringb="--attrs=$attrs_TestValue"
		pkeyobja="selfservice_find_1013"
		pkeyobjb="selfservice_find_1013b"
		grep_string='Self-service\ name'
		general_search_string=$pkeyobja
		rlRun "pkey_return_check" 0 "running checks of --pkey-only in group-find"
		Kcleanup
	rlPhaseEnd
} #selfservice_find_1013

#END OF TEST CASE for [selfservice-find]

#############################################
#  test suite: selfservice-mod (9 test cases)
#############################################
selfservice_mod()
{
	selfservice_mod_envsetup
### prompts for input...not a valid non-interactive test...requires --attrs= or --permissions
	### selfservice_mod_1001  #test_scenario (positive test): [--all]
	selfservice_mod_1002  #test_scenario (negative test): [--all --attrs;negative;LIST --permissions;positive;LIST --raw]
	selfservice_mod_1003  #test_scenario (negative test): [--all --attrs;positive;LIST --permissions;negative;LIST --raw]
	selfservice_mod_1004  #test_scenario (positive test): [--all --attrs;positive;LIST --permissions;positive;LIST --raw]
	selfservice_mod_1005  #test_scenario (negative test): [--attrs;negative;LIST]
	selfservice_mod_1006  #test_scenario (positive test): [--attrs;positive;LIST]
	selfservice_mod_1007  #test_scenario (negative test): [--permissions;negative;LIST]
	selfservice_mod_1008  #test_scenario (positive test): [--permissions;positive;LIST]
### prompts for input...not a valid non-interactive test...requires --attrs= or --permissions
	### selfservice_mod_1009  #test_scenario (positive test): [--raw]
	selfservice_mod_envcleanup
} #selfservice-mod

selfservice_mod_envsetup()
{
	rlPhaseStartSetup "selfservice_mod_envsetup"
		#environment setup starts here
		KinitAsAdmin
		for i in $(seq 1001 1009); do
			rlRun "ipa selfservice-add --attrs=l --permissions=write selfservice_mod_$i" 0 "selfservice-add selfservice_mod_$i rule needed for test"
		done
		Kcleanup
		#environment setup ends   here
	rlPhaseEnd
} #envsetup

selfservice_mod_envcleanup()
{
	rlPhaseStartCleanup "selfservice_mod_envcleanup"
		#environment cleanup starts here
		KinitAsAdmin
		for i in $(seq 1001 1009); do
			rlRun "ipa selfservice-del selfservice_mod_$i" 0 "selfservice-del selfservice_mod_$i rule used for test"
		done
		Kcleanup
		#environment cleanup ends   here
	rlPhaseEnd
} #envcleanup

selfservice_mod_1001() ### prompts for input...not a valid non-interactive test...requires --attrs= or --permissions
{
	rlPhaseStartTest "selfservice_mod_1001 [positive test] --all"
		local testID="selfservice_mod_1001"
		local tmpout=$TmpDir/selfservice_mod_1001.$RANDOM.out
		KinitAsAdmin
		rlRun "ipa selfservice-mod $testID --all " 0 "test options: " 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_mod_1001

selfservice_mod_1002()
{
	rlPhaseStartTest "selfservice_mod_1002 [negative test] --all --attrs;negative;LIST --permissions;positive;LIST --raw"
		local testID="selfservice_mod_1002"
		local tmpout=$TmpDir/selfservice_mod_1002.$RANDOM.out
		KinitAsAdmin
		local attrs_TestValue_Negative="badattr" #attrs;negative;LIST 
		local permissions_TestValue="write" #permissions;positive;LIST 
		local expectedErrMsg="ipa: ERROR: targetattr \"badattr\" does not exist in schema."
		local expectedErrCode=1
		qaRun "ipa selfservice-mod $testID --all  --attrs=$attrs_TestValue_Negative  --permissions=$permissions_TestValue --raw " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  (with invalid attrs) [attrs]=[$attrs_TestValue_Negative] [permissions]=[$permissions_TestValue]" 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_mod_1002

selfservice_mod_1003()
{
	rlPhaseStartTest "selfservice_mod_1003 [negative test] --all --attrs;positive;LIST --permissions;negative;LIST --raw"
		local testID="selfservice_mod_1003"
		local tmpout=$TmpDir/selfservice_mod_1003.$RANDOM.out
		KinitAsAdmin
		local attrs_TestValue="l" #attrs;positive;LIST 
		local permissions_TestValue_Negative="badperm" #permissions;negative;LIST 
		local expectedErrMsg="ipa: ERROR: invalid 'permissions': \"badperm\" is not a valid permission"
		local expectedErrCode=1
		qaRun "ipa selfservice-mod $testID --all  --attrs=$attrs_TestValue  --permissions=$permissions_TestValue_Negative --raw " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  (with invalid perms) [attrs]=[$attrs_TestValue] [permissions]=[$permissions_TestValue_Negative]" 
		local permissions_TestValue_Negative="write" #permissions;negative;LIST 
		local expectedErrMsg="ipa: ERROR: no modifications to be performed"
		qaRun "ipa selfservice-mod $testID --all  --attrs=$attrs_TestValue  --permissions=$permissions_TestValue_Negative --raw " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  (with existing perms) [attrs]=[$attrs_TestValue] [permissions]=[$permissions_TestValue_Negative]" 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_mod_1003

selfservice_mod_1004() # BZ 772675 -- ipa selfservice-mod --raw returns "internal error" message
{
	rlPhaseStartTest "selfservice_mod_1004 [positive test] --all --attrs;positive;LIST --permissions;positive;LIST --raw"
		local testID="selfservice_mod_1004"
		local tmpout=$TmpDir/selfservice_mod_1004.$RANDOM.out
		KinitAsAdmin
		local attrs_TestValue="mobile" #attrs;positive;LIST 
		local permissions_TestValue="write" #permissions;positive;LIST 
		#rlRun "ipa selfservice-mod $testID --all  --attrs=$attrs_TestValue  --permissions=$permissions_TestValue --raw " 0 "test options:  (change attr, with --raw) [attrs]=[$attrs_TestValue] [permissions]=[$permissions_TestValue]" 
		local expectedErrMsg="aciname: $testID"
		local expectedErrCode=0
		qaRun "ipa selfservice-mod $testID --all  --attrs=$attrs_TestValue  --permissions=$permissions_TestValue --raw" "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  [attrs]=[$attrs_TestValue] [permissions]=[$permissions_TestValue]"
		if [ $(grep "ipa: ERROR: an internal error has occurred" $tmpout | wc -l) -eq 1 ]; then
			rlFail "BZ 772675 -- ipa selfservice-mod --raw returns \"internal error\" message"
		fi
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_mod_1004

selfservice_mod_1005() # BZ 747741 -- command: ipa selfservice-mod : provide wrong attr for --attrs delete a selfservice permission
{
	rlPhaseStartTest "selfservice_mod_1005 [negative test] --attrs;negative;LIST"
		local testID="selfservice_mod_1005"
		KinitAsAdmin
		local tmpout=$TmpDir/selfservice_mod_1005.$RANDOM.out.1
		local attrs_TestValue_Negative="badattrs" #attrs;negative;LIST
		local expectedErrMsg="ipa: ERROR: targetattr \"badattrs\" does not exist in schema."
		local expectedErrCode=1
		qaRun "ipa selfservice-mod $testID  --attrs=$attrs_TestValue_Negative" "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  (with invalid attrs) [attrs]=[$attrs_TestValue_Negative]" 
		if [ $(ipa selfservice-show $testID|grep "ipa: ERROR: ACI with name \"$testID\" not found" |wc -l) -eq 1 ]; then
			rlFail "BZ 747741 -- command: ipa selfservice-mod : provide wrong attr for --attrs delete a selfservice permission"
		fi
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_mod_1005

selfservice_mod_1006()
{
	rlPhaseStartTest "selfservice_mod_1006 [positive test] --attrs;positive;LIST"
		local testID="selfservice_mod_1006"
		local tmpout=$TmpDir/selfservice_mod_1006.$RANDOM.out
		KinitAsAdmin
		local attrs_TestValue="mobile" #attrs;positive;LIST
		rlRun "ipa selfservice-mod $testID  --attrs=$attrs_TestValue " 0 "test options:  (change attrs) [attrs]=[$attrs_TestValue]" 
		local attrs_TestValue="mobile,l" #attrs;positive;LIST
		rlRun "ipa selfservice-mod $testID  --attrs=$attrs_TestValue " 0 "test options:  (add attrs) [attrs]=[$attrs_TestValue]" 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_mod_1006

selfservice_mod_1007() 
{
	rlPhaseStartTest "selfservice_mod_1007 [negative test] --permissions;negative;LIST"
		local testID="selfservice_mod_1007"
		local tmpout=$TmpDir/selfservice_mod_1007.$RANDOM.out
		KinitAsAdmin
		local permissions_TestValue_Negative="badperm" #permissions;negative;LIST
		local expectedErrMsg="ipa: ERROR: invalid 'permissions': \"badperm\" is not a valid permission"
		local expectedErrCode=1
		qaRun "ipa selfservice-mod $testID  --permissions=$permissions_TestValue_Negative " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  (invalid perms) [permissions]=[$permissions_TestValue_Negative]" 
		local permissions_TestValue_Negative="write" #permissions;negative;LIST
		local expectedErrMsg="ipa: ERROR: no modifications to be performed"
		qaRun "ipa selfservice-mod $testID  --permissions=$permissions_TestValue_Negative " "$tmpout" $expectedErrCode "$expectedErrMsg" "test options:  (same perms) [permissions]=[$permissions_TestValue_Negative]" 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_mod_1007

selfservice_mod_1008() 
{
	rlPhaseStartTest "selfservice_mod_1008 [positive test] --permissions;positive;LIST"
		local testID="selfservice_mod_1008"
		local tmpout=$TmpDir/selfservice_mod_1008.$RANDOM.out
		KinitAsAdmin
		local permissions_TestValue="read" #permissions;positive;LIST
		rlRun "ipa selfservice-mod $testID  --permissions=$permissions_TestValue " 0 "test options:  (change perms) [permissions]=[$permissions_TestValue]" 
		local permissions_TestValue="read,write" #permissions;positive;LIST
		rlRun "ipa selfservice-mod $testID  --permissions=$permissions_TestValue " 0 "test options:  (add perms) [permissions]=[$permissions_TestValue]" 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_mod_1008

selfservice_mod_1009() ### prompts for input...not a valid non-interactive test...requires --attrs= or --permissions
{
	rlPhaseStartTest "selfservice_mod_1009 [positive test] --raw"
		local testID="selfservice_mod_1009"
		local tmpout=$TmpDir/selfservice_mod_1009.$RANDOM.out
		KinitAsAdmin
		rlRun "ipa selfservice-mod $testID --raw " 0 "test options: " 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_mod_1009

#END OF TEST CASE for [selfservice-mod]

#############################################
#  test suite: selfservice-show (3 test cases)
#############################################
selfservice_show()
{
	selfservice_show_envsetup
	selfservice_show_1001  #test_scenario (positive test): [--all]
	selfservice_show_1002  #test_scenario (positive test): [--all --raw]
	selfservice_show_1003  #test_scenario (positive test): [--raw]
	selfservice_show_envcleanup
} #selfservice-show

selfservice_show_envsetup()
{
	rlPhaseStartSetup "selfservice_show_envsetup"
		#environment setup starts here
		KinitAsAdmin
		for i in $(seq 1001 1003); do
			rlRun "ipa selfservice-add --attrs=l --permissions=write selfservice_show_$i" 0 "selfservice-add selfservice_show_$i rule needed for test"
		done
		Kcleanup
		#environment setup ends   here
	rlPhaseEnd
} #envsetup

selfservice_show_envcleanup()
{
	rlPhaseStartCleanup "selfservice_show_envcleanup"
		#environment cleanup starts here
		KinitAsAdmin
		for i in $(seq 1001 1003); do
			rlRun "ipa selfservice-del selfservice_show_$i" 0 "selfservice-del selfservice_show_$i rule used for test"
		done
		Kcleanup
		#environment cleanup ends   here
	rlPhaseEnd
} #envcleanup

selfservice_show_1001()
{
	rlPhaseStartTest "selfservice_show_1001 [positive test] --all"
		local testID="selfservice_show_1001"
		local tmpout=$TmpDir/selfservice_show_1001.$RANDOM.out
		KinitAsAdmin
		rlRun "ipa selfservice-show $testID --all " 0 "test options: " 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_show_1001

selfservice_show_1002()
{
	rlPhaseStartTest "selfservice_show_1002 [positive test] --all --raw"
		local testID="selfservice_show_1002"
		local tmpout=$TmpDir/selfservice_show_1002.$RANDOM.out
		KinitAsAdmin
		rlRun "ipa selfservice-show $testID --all --raw " 0 "test options: " 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_show_1002

selfservice_show_1003()
{
	rlPhaseStartTest "selfservice_show_1003 [positive test] --raw"
		local testID="selfservice_show_1003"
		local tmpout=$TmpDir/selfservice_show_1003.$RANDOM.out
		KinitAsAdmin
		rlRun "ipa selfservice-show $testID --raw " 0 "test options: " 
		Kcleanup
		[ -f $tmpout ] && rm $tmpout
	rlPhaseEnd
} #selfservice_show_1003

#END OF TEST CASE for [selfservice-show]
