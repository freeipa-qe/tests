##############################################################
# SSH USER KEY TEST:
##############################################################


# On Client:

sed -e '/AuthorizedKeysCommand/d' /etc/ssh/sshd_config
echo "AuthorizedKeysCommand /usr/bin/sss_ssh_authorizedkeys" >> /etc/ssh/sshd_config

# On Master:

kinit admin

echo "passtest123" | ipa user-add user1 --first=f --last=l --password

cd ~/.ssh

ssh-keygen -t rsa -N "" -f id_rsa_user1

TESTPUBKEY1=$(awk '{print $2}' id_rsa_user1.pub)

ipa user-mod user1 --sshpubkey="$TESTPUBKEY1"

ssh -i id_rsa_user1 user1@vm2

### tests needed:

### user-add positive:
# Add user with empty key field
# Add user with blank key field
# Add user with one valid key
# Add user with two valid keys
# Add user with many valid keys -- how many should I test?

### user-add negative:
# Fail to add user with Invalid Space in Key field
# Fail to add user with Missing equal signs at end of Key field
# Fail to add user with Invalid Key Only
# Fail to add user with Invalid Key First of two
# Fail to add user with Invalid Key First of N # how many to test?
# Fail to add user with Invalid Key Second of two
# Fail to add user with Invalid Key in Middle (Second of three)
# Fail to add user with Invalid Key Last (Third of three)
# Fail to add user with SAME Valid Key 

### user-mod positive:
# Mod user with empty key field
# Mod user with blank key field
# Mod user with one valid key
# Mod user with two valid keys
# Mod user with many valid keys

### user-mod negative:
# Fail to mod user with Invalid Space in Key field
# Fail to mod user with Missing equal signs at end of Key field
# Fail to mod user with Invalid Key Only
# Fail to mod user with Invalid Key First of two
# Fail to mod user with Invalid Key First of N # how many to test?
# Fail to mod user with Invalid Key Second of two
# Fail to mod user with Invalid Key in Middle (Second of three)
# Fail to mod user with Invalid Key Last (Third of three)
# Fail to mod user with SAME Valid Key

### user key functional test
# User creates and uploads own keys
# User ssh to host with keys
# User deletes own key(s)
# Admin revokes/removes keys uploaded by user
# Should I test with and without passphrases?
# user runs user-mod to upload keys after user-disable
# user attempts to ssh with keys after user-disbable
# user runs user-mod to upload keys after user account locked?
# user attempts to ssh with keys after user account locked?

### selfservice tests needed? 
# confirm selfservice rule exists
# delete selfservice rule and confirm user cannot upload own keys
# re-add selfservice rule and confirm user can upload keys again

### delegation tests needed?
# add delegation for user to modify ipasshpubkey
# user upload keys for other user
# user fail to upload keys when doesn't have permission
# admin forbid a user from uploading keys (even with selfservice in place)

##############################################################
# SSH HOST KEY TEST:
##############################################################

tmpout=/tmp/errormsg.out

ipa dnszone-add 2.2.2.in-addr.arpa. --name-server=vm1.testrelm.com --admin-email=ipaqar.redhat.com
for i in 1 2 3 4 5; do
	ssh-keygen -q -t rsa -f host${i}_rsa -C '' -N '' 
	RSAKEY=$(awk '{print $2}' host${i}_rsa.pub)
	RSAKEYFP=$(ssh-keygen -l -f host${i}_rsa.pub|awk '{print $2}')
	RSADNSFP=$(ssh-keygen -r host${i}.$DOMAIN -f host${i}_rsa.pub|awk '{print $6}'|tr '[:upper:]' '[:lower:]')

	ssh-keygen -q -t dsa -f host${i}_dsa -C '' -N '' 
	DSAKEY=$(awk '{print $2}' host${i}_dsa.pub)
	DSAKEYFP=$(ssh-keygen -l -f host${i}_dsa.pub|awk '{print $2}')
	DSADNSFP=$(ssh-keygen -r host${i}.$DOMAIN -f host${i}_dsa.pub|awk '{print $6}'|tr '[:upper:]' '[:lower:]')
	
	ipa host-add host${i}.$DOMAIN --ip-address=2.2.2.${i} --sshpubkey="$RSAKEY" --sshpubkey="$DSAKEY"

	# Check host entries
	ipa host-show host${i}.$DOMAIN --raw > $tmpout 2>&1
	rlLog "Confirm Host entry has RSA Key FingerPrint listed"
	rlAssertGrep "$RSAKEYFP" $tmpout
	rlLog "Confirm Host entry has DSA Key FingerPrint listed"
	rlAssertGrep "$DSAKEYFP" $tmpout

	# Check DNS entries
	IPARSADNSFP=$(ipa dnsrecord-show $DOMAIN host${i} --raw|grep "sshfprecord: 1"|awk '{print $4}'|tr '[:upper:]' '[:lower:]')
	IPADSADNSFP=$(ipa dnsrecord-show $DOMAIN host${i} --raw|grep "sshfprecord: 2"|awk '{print $4}'|tr '[:upper:]' '[:lower:]')

	if [ "$RSADNSFP" = "$IPARSADNSFP" ]; then
		rlPass "IPA DNS record found for RSA SSH FP"		
	else
		rlFail "IPA DNS record not found for RSA SSH FP"
	fi
	
	if [ "$DSADNSFP" = "$IPADSADNSFP" ]; then
		rlPass "IPA DNS record found for DSA SSH FP"		
	else
		rlFail "IPA DNS record not found for DSA SSH FP"
	fi
done

# ipa-client-install --ssh-trust-dns

### host-add positive:
# Add host with empty key field
# Add host with blank key field
# Add host with one valid key
# Add host with two valid keys
# Add host with many valid keys -- how many should I test?
# Add host with blank key field to delete keys

### host-add negative:
# Fail to add host with Invalid Space in Key field
# Fail to add host with Missing equal signs at end of Key field
# Fail to add host with Invalid Key Only
# Fail to add host with Invalid Key First of two
# Fail to add host with Invalid Key First of N # how many to test?
# Fail to add host with Invalid Key Second of two
# Fail to add host with Invalid Key in Middle (Second of three)
# Fail to add host with Invalid Key Last (Third of three)

### host-mod positive:
# Mod host with empty key field
# Mod host with blank key field
# Mod host with one valid key
# Mod host with two valid keys
# Mod host with many valid keys

### host-mod negative:
# Fail to mod host with Invalid Space in Key field
# Fail to mod host with Missing equal signs at end of Key field
# Fail to mod host with Invalid Key Only
# Fail to mod host with Invalid Key First of two
# Fail to mod host with Invalid Key First of N # how many to test?
# Fail to mod host with Invalid Key Second of two
# Fail to mod host with Invalid Key in Middle (Second of three)
# Fail to mod host with Invalid Key Last (Third of three)

### host key functional test
# New client added and host keys uploaded automatically to DNS
# User ssh to client and sees valid keys match from DNS.
	# ATM this will still prompt until DNSSEC support added
# Admin revokes/removes host keys
# User does not see key match from DNS
# Admin re-adds keys
# Host replaces keys
# User gets error/warning about key mismatch?
# host-mod add keys after host-disable
# ssh to/from host after host-disable
# host-mod add keys after host-del?
# ssh to/from host after host-del?
