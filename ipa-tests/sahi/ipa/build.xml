<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="sahi_eval" default="compile">
	<property environment="env" />
	<property name="user.data" value="${env.SAHI_USERDATA_DIR}" location="/home/sahi/userdata/scripts" />
	<property name="sahi.dir" value="${env.SAHI_BASE}" location="/home/sahi" />
	<property environment="env" />
	<property name="test.build.dir" location="bin" />
	<property name="test.src.dir" location="src" />
	<property name="test.output.dir" location="test-output" />
	<property name="report.dir" value="test-output/Hudson_Test_Suite" />
	<condition property="webui-framework.dir" value="/home/webui-framework">
		<not>
			<isset property="webui-framework.dir" />
		</not>
	</condition>

	<path id="utils.cp">
		<fileset dir="${webui-framework.dir}/lib">
			<include name="*.jar" />
		</fileset>
		<fileset dir="/home/sahi/lib">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="tests.cp">
		<pathelement location="${test.build.dir}" />
		<pathelement location="${webui-framework.dir}/bin" />
		<path refid="utils.cp" />
	</path>

	<taskdef name="sahi" classname="net.sf.sahi.ant.RunSahiTask" classpath="/home/sahi/lib/ant-sahi.jar" />
	<taskdef name="testng" classpathref="utils.cp" classname="org.testng.TestNGAntTask" />

	<target name="deps">
		<echo message="Compiling dependencies in ${webui-framework.dir}" />

		<ant antfile="${webui-framework.dir}/build.xml">
			<property name="basedir" value="${webui-framework.dir}" />
		</ant>
	</target>

	<target name="compile" depends="">
		<echo message="Compiling testsuite in ${basedir}" />
		<antcall target="deps" />
		<mkdir dir="${test.build.dir}" />

		<javac srcdir="${test.src.dir}" destdir="${test.build.dir}" classpathref="tests.cp" debug="on">
			<compilerarg value="-Xlint" />
		</javac>
		<echo message="Done." />
	</target>

	<target name="run" description="run RHQ sahi java test" depends="compile">
		<testng haltonfailure="false" classpathref="tests.cp" reporter="org.testng.reporters.JUnitXMLReporter" outputdir="${test.output.dir}" listeners="com.redhat.qe.auto.testng.TestNGListener">
			<xmlfileset dir="src/com/redhat/qe/ipa/sahi/tests/delegation" includes="delegation-testng.xml"/>
			<xmlfileset dir="src/com/redhat/qe/ipa/sahi/tests/rbac" includes="rbac-testng.xml"/>
			<xmlfileset dir="src/com/redhat/qe/ipa/sahi/tests/host" includes="host-testng.xml"/>
			<xmlfileset dir="src/com/redhat/qe/ipa/sahi/tests/service" includes="service-testng.xml"/>
			<xmlfileset dir="src/com/redhat/qe/ipa/sahi/tests/user" includes="user-testng.xml"/>
            <xmlfileset dir="src/com/redhat/qe/ipa/sahi/tests/group" includes="group-testng.xml"/>
            <xmlfileset dir="src/com/redhat/qe/ipa/sahi/tests/hostgroup" includes="hostgroup-testng.xml" />
			<xmlfileset dir="src/com/redhat/qe/ipa/sahi/tests/netgroup" includes="netgroup-testng.xml"/>
			<xmlfileset dir="src/com/redhat/qe/ipa/sahi/tests/dns" includes="dns-testng.xml"/>  
			<xmlfileset dir="src/com/redhat/qe/ipa/sahi/tests/hbac" includes="hbac-testng.xml"/>
			<xmlfileset dir="src/com/redhat/qe/ipa/sahi/tests/sudo" includes="sudo-testng.xml"/>
			<xmlfileset dir="src/com/redhat/qe/ipa/sahi/tests/automount" includes="automount.xml"/>
			<xmlfileset dir="src/com/redhat/qe/ipa/sahi/tests/passwordpolicy" includes="passwordpolicy-testng.xml"/>
			<xmlfileset dir="src/com/redhat/qe/ipa/sahi/tests/kerberosticketpolicy" includes="kerberosticketpolicy-testng.xml"/>
			<xmlfileset dir="src/com/redhat/qe/ipa/sahi/tests/selinux" includes="selinux-testng.xml"/>
			<xmlfileset dir="src/com/redhat/qe/ipa/sahi/tests/selfservicepermission" includes="selfservicepermission-testng.xml"/> 
			<xmlfileset dir="src/com/redhat/qe/ipa/sahi/tests/configuration" includes="configuration-testng.xml"/>
			<!--<xmlfileset dir="src/com/redhat/qe/ipa/sahi/tests/automember" includes="automember.xml"/>-->
		<!--<xmlfileset dir="src/com/redhat/qe/ipa/sahi/tests/trusts" includes="trust-testng.xml"/> -->
		<!--<xmlfileset dir="src/com/redhat/qe/ipa/sahi/tests/globalization" includes="globalization-testng.xml"/> -->
		</testng>
	</target>

	<target name="clean">
		<echo message="Cleaning ${test.build.dir}" />
		<delete failonerror="true" quiet="false" includeemptydirs="true">
			<fileset dir="${test.build.dir}" includes="**/*" />
		</delete>
		<delete dir="${test.output.dir}" />
	</target>
</project>
